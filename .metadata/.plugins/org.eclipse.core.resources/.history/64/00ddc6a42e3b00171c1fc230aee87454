/* ###################################################################
**     Filename    : os_tasks.c
**     Project     : LabLED
**     Processor   : MKL25Z128VLK4
**     Component   : Events
**     Version     : Driver 01.00
**     Compiler    : GNU C Compiler
**     Date/Time   : 2017-04-19, 15:10, # CodeGen: 8
**     Abstract    :
**         This is user's event module.
**         Put your event handler code here.
**     Settings    :
**     Contents    :
**         Task1_task - void Task1_task(os_task_param_t task_init_data);
**
** ###################################################################*/
/*!
** @file os_tasks.c
** @version 01.00
** @brief
**         This is user's event module.
**         Put your event handler code here.
*/         
/*!
**  @addtogroup os_tasks_module os_tasks module documentation
**  @{
*/         
/* MODULE os_tasks */

#include "Cpu.h"
#include "Events.h"
#include "os_tasks.h"
#include "customComponents/led_hal.h"

#ifdef __cplusplus
extern "C" {
#endif 


/* User includes (#include below this line is not maintained by Processor Expert) */


/*
** ===================================================================
**     Event       :  Task1_task (module os_tasks)
**
**     Component   :  Task1 [OS_Task]
*/
/*!
**     @brief
**         RTOS task routine. The routine is generated into os_tasks.c
**         file.
**     @param
**         task_init_data  - Parameter to be passed to the
**         task when it is created.
*/
/* ===================================================================*/
void Task1_task(os_task_param_t task_init_data)
{
  /* Write your local variable definition here */
	char cState = 0;

	int iColors[7] = {BLUE, GREEN, LBLUE, RED, PINK, YELLOW, WHITE};
	int index = 0;
	int message;
  
#ifdef PEX_USE_RTOS
  while (1) {
#endif
    /* Write your code here ... */
	  switch(cState){
	  	  case 0:
	  		  message = iColors[index];
	  		  if(OSA_MsgQPut(queueHandler, &message) ==  kStatus_OSA_Success) 		//Writes message to message queue
	  		  cState = 1;
	  		  break;
	  	  case 1:
	  		  index = ((index<6) ? index+1 : 0);					//Updates index value
	  		  cState = 0;
	  		  break;
	  	  }
    
#ifdef PEX_USE_RTOS   
  }
#endif    
}

/*
** ===================================================================
**     Event       :  Task2_task (module os_tasks)
**
**     Component   :  Task2 [OS_Task]
*/
/*!
**     @brief
**         RTOS task routine. The routine is generated into os_tasks.c
**         file.
**     @param
**         task_init_data  - Parameter to be passed to the
**         task when it is created.
*/
/* ===================================================================*/
void Task2_task(os_task_param_t task_init_data)
{
  /* Write your local variable definition here */
	char cState = 0;
	int color;
	int message;
  
#ifdef PEX_USE_RTOS
  while (1) {
#endif
    /* Write your code here ... */
	  switch(cState){
	  case 0:
		  OSA_MsgQGet(queueHandler,&message,OSA_WAIT_FOREVER);		//Reads message queue
		  cState = 1;
		  break;
	  case 1:
		  color = message;
		  led_setLed(color);					      			//Turns on the LED
		  cState = 2;
		  break;
	  case 2:
		  OSA_TimeDelay(1000);				      				//Waits for 1s
		  cState = 3;
		  break;
	  case 3:
	  	  led_clearLed(color);				      				//Unlocks semaphore 1
	  	  cState = 4;
	  	  break;
	  case 4:
		  //OSA_SemaPost(&sem1);				      				//Unlocks semaphore 1
		  cState = 0;
		  break;
	  }
    
#ifdef PEX_USE_RTOS   
  }
#endif    
}

/* END os_tasks */

#ifdef __cplusplus
}  /* extern "C" */
#endif 

/*!
** @}
*/
/*
** ###################################################################
**
**     This file was created by Processor Expert 10.5 [05.21]
**     for the Freescale Kinetis series of microcontrollers.
**
** ###################################################################
*/
